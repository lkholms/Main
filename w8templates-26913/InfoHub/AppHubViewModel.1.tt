<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="cs" #>
<#

	// WARNING do not edit this file unless you know what you are doing!
	// This file is a T4 template used for code generation
	// T4 templates have been a built-in part of Visual Studio since version 2008
	// To learn more about T4 templates: http://msdn.microsoft.com/en-us/library/vstudio/bb126445.aspx

	// load xml file
	var _Directory = System.IO.Path.GetDirectoryName(this.Host.TemplateFile);
	var _Path = System.IO.Path.Combine(_Directory, "AppHubViewModel.xml");
	if (!System.IO.File.Exists(_Path))
		throw new System.IO.FileNotFoundException("AppHubViewModel.xml is missing"); 
	System.Xml.Linq.XElement _Root = null;
	try { _Root = System.Xml.Linq.XElement.Load(_Path); } 
	catch (Exception e) { throw new Exception("AppHubViewModel.xml is invalid", e); }

#>
/*
 * WARNING this file is generated automatically
 * The values for this file are in "AppHubViewModel.xml"
 * Every time generation occurs the contents of this file are rewritten
 * Any custom changes you make in this file will be lost upon generation
 * 
 * To invoke generation, right-click "AppHubViewModel.1.tt" and select "Run Custom Tool"
 * To prevent generation, right-click "AppHubViewModel.1.tt" and select "Properties"
 *    In the properties dialog, clear the value of "Custom Tool" to blank
 *    
 * Last generation: <#= DateTime.Now.ToString() #>
 */

	using InfoHub.Articles;
	using InfoHub.Common;
	using InfoHub.Feeds;
	using InfoHub.Helpers;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.ComponentModel;
	using System.Linq;
	using System.Text;
	using System.Threading.Tasks;

namespace InfoHub 
{
    public partial class AppHubViewModel
    {
        public readonly static InfoHub.Common.StringsModel Strings = new InfoHub.Common.StringsModel()
        {
            /*
             * SECTION 1 :: SETTINGS
             * Title and subtitle of the main page (above the grid)
             */
            Title = "<#= _Root.Element("Title").Value #>",
            SubTitle = "<#= _Root.Element("SubTitle").Value #>",
			Theme = Themes.<#= _Root.Attribute("Theme").Value #>,

            /*
             * SECTION 2 :: SUMMARY
             * note: the IMAGE property is optional, it's extra decoration for the first tile
             * note: the MORE url is where the user is sent when they click the text area
             */
			<# var _Summary = _Root.Element("Summary"); #>
            SummaryInclude = <#= _Summary.Attribute("Include").Value #>,
            SummaryData = new
            {
				<# var _Title1 = _Summary.Element("Title1"); if (_Title1 != null && !string.IsNullOrWhiteSpace(_Title1.Value)) { #>Title1 = "<#= _Title1.Value #>",
				<# } #><# var _Title2 = _Summary.Element("Title2"); if (_Title2 != null && !string.IsNullOrWhiteSpace(_Title2.Value)) { #>Title2 = "<#= _Title2.Value #>",
				<# } #><# var _Image = _Summary.Element("Image"); if (_Image != null && !string.IsNullOrWhiteSpace(_Image.Value)) { #>Image = "<#= _Image.Value #>",
				<# } #><# var _Link = _Summary.Element("More"); if (_Link != null && !string.IsNullOrWhiteSpace(_Link.Value)) { #>Link = "<#= _Link.Value #>",<# } #>

                Facts = new string[][]
                { 
<# foreach (var item in _Summary.Element("Facts").Elements("Fact")) { #>
                   new string[]{ "<#= item.Element("Line1").Value #>", "<#= item.Element("Line2").Value #>" },
<# } #>
                },
            },

            /*
             * SECTION 3 :: COUNTS
             */
			NewsCount = 7,
			FlickrCount = 5,
			TwitterCount = 12,
			YouTubeCount = 5,
			CalendarCount = 12,
			WeatherCount = 7,

            /*
             * SECTION 4 :: ADVERTISING
             * reference: http://pubcenter.microsoft.com
             * note: be sure to include "HideAds" for in-app purchase
             */
			<# var _Ads = _Root.Element("Advertise"); #>AdInclude = <#= _Ads.Attribute("Include").Value #>,
			AdApplicationId = "<#= _Ads.Element("ApplicationId").Value #>",
			AdUnitId = "<#= _Ads.Element("AdUnitId").Value #>",

            /*
             * SECTION 5 :: PRIVACY POLICY
             * You must have a privacy policy if you use the internet (this app uses the internet)
             * reference: build your own: http://privacychoice.org
             * reference: generic policy: http://freeprivacypolicy.org/generic.php
             * note: local policies are not needed unless the tester specifies you need one
             */
			<# var _Privacy = _Root.Element("PrivacyPolicy"); #>PrivacyPolicyUseLocal = <#= _Privacy.Attribute("Local").Value #>,
			PrivacyPolicyText = "<#= _Privacy.Element("Title").Value #>",
			PrivacyPolicyUrl = "<#= _Privacy.Element("More").Value #>",

            /*
             * SECTION 6 :: DIALOGS TEXT
             * note: these are included to allow for localization in a single place
             */
            ShareHtml = "Hey! <p>I wanted to share {0} by {1} on {2:d}. <p>It's from {3} in {4}. <p>Check it out!",
            ShareTitle = "Information",
            NoInternetWarning = "Internet is required. Check connection and refresh.",
            PrivacyPolicyLocalText = "This privacy policy governs your use of this application. The Application does not collect personal information and does not monitor your personal use of the Application. This application does not transmit any information without your knowledge. You can easily uninstall the application at any time by using the standard uninstall processes available with Windows platform. If you have a reason to believe that your personal information is being tracked or collected while using the Application, please contact us. ",
        };

        void AddFeeds()
        {
<# foreach (System.Xml.Linq.XElement item in _Root.Element("Feeds").Descendants()) { 

		var _Name = item.Name.ToString();

		if (_Name.Equals("News")) { #>
            /*
             * NEWS
             * reference: mix feeds: http://chimpfeedr.com/
             * reference: create a feed: http://www.feed43.com/
             * example: http://www.denverbroncos.com/cda-web/rss-module.htm?tagName=News
			 * example: https://news.google.com/news/feeds?q=denver+broncos&output=rss
			 * example: http://www.bing.com/news/search?q=denver+broncos&format=RSS
             */
			this.Feeds.Add(new GroupedItem(new RssFeed<NewsArticle>
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "<#= item.Element("Source").Value #>",
                MoreUrl = "<#= item.Element("More").Value #>",
            })); 
<#		} else if (_Name.Equals("YouTube")) { #>

            /* 
             * YOUTUBE
             * reference: https://gdata.youtube.com/demo/index.html
             * example: channel feed: http://gdata.youtube.com/feeds/api/users/BRONCOPLANET/uploads
             * example: user feed: http://gdata.youtube.com/feeds/base/videos?max-results=12&alt=rss&author=JERRYNIXON
             * exmaple: search term feed: http://gdata.youtube.com/feeds/base/videos?alt=rss&q=Broncos
             * exmaple: search terms feed: http://gdata.youtube.com/feeds/base/videos?alt=rss&q=Denver%20Broncos
             */
			this.Feeds.Add(new GroupedItem(new RssFeed<YouTubeArticle>
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "<#= item.Element("Source").Value #>",
                MoreUrl = "<#= item.Element("More").Value #>",
            }));
<#		} else if (_Name.Equals("Twitter")) { #>

            /*
             * TWITTER
             * reference: https://dev.twitter.com/docs/api/1/get/statuses/user_timeline
             * example: single user http://api.twitter.com/1/statuses/user_timeline.rss?screen_name=jerrynixon
             * example: search term http://search.twitter.com/search.rss?q=Broncos&rpp=20
             * example: search terms "http://search.twitter.com/search.rss?q=Denver%20Broncos&rpp=20
             */
			this.Feeds.Add(new GroupedItem(new RssFeed<TwitterArticle>
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "<#= item.Element("Source").Value #>",
                MoreUrl = "<#= item.Element("More").Value #>",
            }));
<#		} else if (_Name.Equals("Flickr")) { #>

            /*
             * FLICKR FEED
             * resource: http://www.flickr.com/services/feeds/docs/photos_public/
             * example: user feed: http://api.flickr.com/services/feeds/photos_public.gne?id=36140829@N03&lang=en-us&format=rss_200
             * note: for a single user, look at the bottom of their photostream page for the rss button
             * example: search term feed: "http://api.flickr.com/services/feeds/photos_public.gne?tags=Broncos&tagmode=all&format=rss2"
             * example: search terms feed: "http://api.flickr.com/services/feeds/photos_public.gne?tags=Denver,Broncos&tagmode=all&format=rss2"
             */
			this.Feeds.Add(new GroupedItem(new RssFeed<FlickrArticle>
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "<#= item.Element("Source").Value #>",
                MoreUrl = "<#= item.Element("More").Value #>",
            }));
<#		} else if (_Name.Equals("Calendar")) { #>

            /*
             * CALENDAR
             * note: standard ics calendar only
             */
			this.Feeds.Add(new GroupedItem(new CalendarFeed
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "<#= item.Element("Source").Value #>",
                MoreUrl = "<#= item.Element("More").Value #>",
            }));
<#		} else if (_Name.Equals("Weather")) { #>

            /*
             * WEATHER
             * reference: get weather: http://forecast.weather.gov/
             * reference: get lat/long: http://weather.gov/
             * note: there cannot be more than 7 days
             * note: this is for USA weather only
             */
			this.Feeds.Add(new GroupedItem(new WeatherFeed
            {
                Title = "<#= item.Element("Title").Value #>",
                SourceUrl = "http://forecast.weather.gov/MapClick.php?lat=<#= item.Element("Latitude").Value #>&lon=<#= item.Element("Longitude").Value #>&unit=0&lg=english&FcstType=dwml",
                MoreUrl = "http://forecast.weather.gov/MapClick.php?lat=<#= item.Element("Latitude").Value #>&lon=<#= item.Element("Longitude").Value #>",
            }));
<#		} #>
<#	} #>
        }
    }
}

